bootiful.authorization.users[0].username=${TWIS_USER}
bootiful.authorization.users[0].password=${TWIS_PASSWORD}
bootiful.authorization.users[0].roles[]=user
##
spring.security.oauth2.authorizationserver.issuer=http://localhost:8080

management.endpoint.health.probes.enabled=true
management.endpoints.web.exposure.include=health
#
# use spring cli: `spring encodepassword M1_PA$$W0RD` to produce value that can replace client-secret
#spring.security.oauth2.authorizationserver.client.twis.registration.client-secret=${TWIS_CLIENT_KEY_SECRET}
#spring.security.oauth2.authorizationserver.client.twis.registration.client-id=${TWIS_CLIENT_KEY}
#spring.security.oauth2.authorizationserver.client.twis.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.twis.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.twis.registration.redirect-uris=http://127.0.0.1:8082/login/oauth2/code/spring
#spring.security.oauth2.authorizationserver.client.twis.registration.scopes=user.read,user.write,openid
#spring.security.oauth2.authorizationserver.client.twis.require-authorization-consent=true
#
logging.level.org.springframework.security=trace


spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=${TWIS_CLIENT_KEY}
spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret=${TWIS_CLIENT_KEY_SECRET}
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:8082/login/oauth2/code/spring
spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write,openid
spring.security.oauth2.authorizationserver.client.client-1.require-authorization-consent=true
